# By default, SwiftLint uses a set of sensible default rules you can adjust:
reporter: "xcode"




disabled_rules: # rule identifiers turned on by default to exclude from running
  - line_length
  - trailing_whitespace
  - legacy_constant
  - empty_enum_arguments
opt_in_rules: # some rules are turned off by default, so you need to opt-in
  - empty_count # find all the available rules by running: `swiftlint rules`

# Alternatively, specify all rules explicitly by uncommenting this option:
# only_rules: # delete `disabled_rules` & `opt_in_rules` if using this

analyzer_rules: # rules run by `swiftlint analyze`
  - explicit_self

included: # case-sensitive paths to include during linting. `--path` is ignored if present
  
excluded: # case-sensitive paths to ignore during linting. Takes precedence over `included`
  - Pods

# If true, SwiftLint will not fail if no lintable files are found.
allow_zero_lintable_files: false

# If true, SwiftLint will treat all warnings as errors.
strict: false

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
# line_length: 120
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  # 400
  - 1000 # error
# or they can set both explicitly
file_length:
  warning: 500
  error: 2500
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
vertical_whitespace:
  max_empty_lines: 2
type_name:
  min_length: 4 # only warning
  max_length: # warning and error
    warning: 100
#    error: 50
  excluded: iPhone # excluded via string
  allowed_symbols: ["_"] # these are allowed in type names
identifier_name:
  min_length: # only min_length
    error: 4 # only error
  excluded: # excluded via string array
    - rhs
    - lhs
    - sut
    - id
    - URL
    - i
    - nib
    - row

